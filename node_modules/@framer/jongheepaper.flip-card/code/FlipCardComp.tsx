import * as React from "react"
import {
    Frame,
    useCycle,
    useAnimation,
    addPropertyControls,
    ControlType,
} from "framer"

// Open Preview (CMD + P)
// API Reference: https://www.framer.com/api

export function FlipCardComp(props) {
    const [front, back] = useCycle({ rotateY: 0 }, { rotateY: 180 })
    const radius = props.radius
    return (
        <Frame
            className="filp-card"
            width={props.width}
            height={props.height}
            perspective={1000}
            background={"transparent"}
        >
            <Frame
                className="flip-card-inner"
                position={"relative"}
                background={"transparent"}
                width={"100%"}
                height={"100%"}
                style={{
                    textAlign: "center",
                    transformStyle: "preserve-3d",
                }}
                onTap={() => back()}
                animate={front}
                transition={{ duration: props.duration }}
            >
                <Frame
                    className="flip-card-front"
                    width={"100%"}
                    height={"100%"}
                    radius={props.radius}
                    backgroundColor={"gray"}
                    overflow={props.overflow}
                    color={"black"}
                    style={{
                        transform: "rotateY(0)",
                        zIndex: 2,
                        backfaceVisibility: "hidden",
                        WebkitBackfaceVisibility: "hidden",
                        boxShadow: "0 4px 8px 0 rgba(0,0,0,.2)",
                    }}
                >
                    <div
                        style={{
                            height: "100%",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                        }}
                    >
                        <div>
                            <b>Front Side</b>
                            <br />
                            Link two components
                        </div>
                    </div>

                    {props.front}
                </Frame>
                <Frame
                    className="flip-card-back"
                    position={"absolute"}
                    width={"100%"}
                    height={"100%"}
                    backgroundColor={"black"}
                    overflow={props.overflow}
                    color={"black"}
                    style={{
                        transform: "rotateY(180deg)",
                        backfaceVisibility: "hidden",
                        WebkitBackfaceVisibility: "hidden",
                        zIndex: 1,
                        background: "black",
                        borderRadius: props.radius,
                    }}
                >
                    <div
                        style={{
                            height: "100%",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            color: "white",
                        }}
                    >
                        <div>
                            <b>Back Side</b>
                        </div>
                    </div>
                    {props.back}
                </Frame>
            </Frame>
        </Frame>
    )
}

addPropertyControls(FlipCardComp, {
    front: {
        type: ControlType.ComponentInstance,
    },
    back: {
        type: ControlType.ComponentInstance,
    },
    width: { type: ControlType.Number, defaultValue: 325, min: 10, max: 812 },
    height: { type: ControlType.Number, defaultValue: 205, min: 10, max: 812 },

    radius: {
        type: ControlType.Number,
        defaultValue: 12,
        unit: "px",
    },
    duration: {
        type: ControlType.Number,
        defaultValue: 1,
        min: 0.1,
        max: 10,
        step: 0.01,
        unit: "sec",
    },
    overflow: {
        type: ControlType.SegmentedEnum,
        defaultValue: "hidden",
        options: ["hidden", "visible"],
        optionTitles: ["Hidden", "Visible"],
    },
})
